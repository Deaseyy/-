### [300. 最长上升子序列](https://leetcode-cn.com/problems/longest-increasing-subsequence/)
给定一个无序的整数数组，找到其中最长上升子序列的长度。

示例:
输入: [10,9,2,5,3,7,101,18]
输出: 4 
解释: 最长的上升子序列是 [2,3,7,101]，它的长度是 4。

```python
class Solution(object):
    def lengthOfLIS(self, nums):
        """动态规划解法"""
        # 设置状态：f(i) = 以a[i]结尾的最长上升子序列的长度
        # f[i]从哪来: 可以由a[i]前面每一个比它小的a[j]计算出的f[j]得来,即a[i]>a[j]；
        # 转移方程：f[i] = max{f[j]} + 1； 取f[j]最大值 + a[i]本身长度1
        n = len(nums)
        if n == 0:
            return 0

        f = [0] * n
        f[0] = 1 # 初始化；它本身，长度为1
        res = 1
        for i in range(1, n):
            f[i] = 1
            # 枚举i前面每个比a[i]小的a[j]，取最大的f[j]
            for j in range(i):
                if nums[i] > nums[j]:
                    f[i] = max(f[j]+1, f[i])
            res = max(res, f[i])  # （f[i]为以某个值结尾的最长子序列），需取最大值
        return res
```

